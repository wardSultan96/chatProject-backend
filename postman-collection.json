{
  "info": {
    "name": "NestJS WebSocket Chat API",
    "description": "Complete API collection for testing the NestJS WebSocket Chat application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "roomId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('token', response.access_token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    pm.test('Registration successful', () => {",
                  "        pm.expect(response.access_token).to.exist;",
                  "        pm.expect(response.user).to.exist;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser_{{$randomInt}}\",\n  \"email\": \"test{{$randomInt}}@example.com\",\n  \"password\": \"password123\",\n  \"displayName\": \"Test User {{$randomInt}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('token', response.access_token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    pm.test('Login successful', () => {",
                  "        pm.expect(response.access_token).to.exist;",
                  "        pm.expect(response.user).to.exist;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Get User by Username",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/username/testuser",
              "host": ["{{baseUrl}}"],
              "path": ["users", "username", "testuser"]
            }
          }
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"displayName\": \"Updated Display Name\",\n  \"avatar\": \"https://example.com/avatar.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Rooms",
      "item": [
        {
          "name": "Create Room",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('roomId', response._id);",
                  "    pm.test('Room created successfully', () => {",
                  "        pm.expect(response._id).to.exist;",
                  "        pm.expect(response.name).to.exist;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Room {{$randomInt}}\",\n  \"description\": \"A room for testing purposes\",\n  \"isPrivate\": false,\n  \"maxMembers\": 50\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/rooms",
              "host": ["{{baseUrl}}"],
              "path": ["rooms"]
            }
          }
        },
        {
          "name": "Get All Public Rooms",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/rooms",
              "host": ["{{baseUrl}}"],
              "path": ["rooms"]
            }
          }
        },
        {
          "name": "Get User's Rooms",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/rooms/my-rooms",
              "host": ["{{baseUrl}}"],
              "path": ["rooms", "my-rooms"]
            }
          }
        },
        {
          "name": "Get Room Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/rooms/{{roomId}}",
              "host": ["{{baseUrl}}"],
              "path": ["rooms", "{{roomId}}"]
            }
          }
        },
        {
          "name": "Join Room",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/rooms/{{roomId}}/join",
              "host": ["{{baseUrl}}"],
              "path": ["rooms", "{{roomId}}", "join"]
            }
          }
        },
        {
          "name": "Leave Room",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/rooms/{{roomId}}/leave",
              "host": ["{{baseUrl}}"],
              "path": ["rooms", "{{roomId}}", "leave"]
            }
          }
        },
        {
          "name": "Update Room",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Updated room description\",\n  \"maxMembers\": 75\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/rooms/{{roomId}}",
              "host": ["{{baseUrl}}"],
              "path": ["rooms", "{{roomId}}"]
            }
          }
        },
        {
          "name": "Delete Room",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/rooms/{{roomId}}",
              "host": ["{{baseUrl}}"],
              "path": ["rooms", "{{roomId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Messages",
      "item": [
        {
          "name": "Get Room Messages",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/messages/room/{{roomId}}?limit=20&offset=0",
              "host": ["{{baseUrl}}"],
              "path": ["messages", "room", "{{roomId}}"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            }
          }
        },
        {
          "name": "Get Direct Messages",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/messages/direct/{{userId}}?limit=20&offset=0",
              "host": ["{{baseUrl}}"],
              "path": ["messages", "direct", "{{userId}}"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            }
          }
        },
        {
          "name": "Get User Conversations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/messages/conversations",
              "host": ["{{baseUrl}}"],
              "path": ["messages", "conversations"]
            }
          }
        },
        {
          "name": "Mark Messages as Read",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"messageIds\": [\"messageId1\", \"messageId2\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/mark-read",
              "host": ["{{baseUrl}}"],
              "path": ["messages", "mark-read"]
            }
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Server Health",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set authorization header if token exists",
          "const token = pm.collectionVariables.get('token');",
          "if (token && !pm.request.headers.get('Authorization')) {",
          "    pm.request.headers.add({",
          "        key: 'Authorization',",
          "        value: `Bearer ${token}`",
          "    });",
          "}"
        ]
      }
    }
  ]
}